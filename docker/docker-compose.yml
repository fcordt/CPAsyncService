services:
  cpauth:
    image: at.fcordt/cpauth:1.0
    container_name: cpauth
    environment:
      KAFKA_BOOTSTRAP_SERVER: 'kafka:${KAFKA_LISTENER_PORT}'
      KAFKA_TOPIC: 'cpauth'
      KAFKA_INSERTION_TIMEOUT: 1000
      KTOR_PORT: ${FRONTEND_PORT}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - kafka
    networks:
      - cp
  cpbackend:
    image: at.fcordt/cpbackend:1.0
    container_name: cpbackend
    environment:
      KTOR_PORT: ${BACKEND_PORT}
      WHITELIST_USERS: 'long-enough-innit'
      WHITELIST_STATIONS: '3fa85f64-5717-4562-b3fc-2c963f66afa6,3fa85f64-5717-4562-b3fc-2c963f66afa7'
    networks:
      - cp
  cpconsumer:
    image: at.fcordt/cpconsumer:1.0
    container_name: cpconsumer
    environment:
      REQUEST_TIMEOUT: 10000
      KAFKA_BOOTSTRAP_SERVER: 'kafka:${KAFKA_LISTENER_PORT}'
      KAFKA_TOPIC: 'cpauth'
      MONGO_DB_CONNECTION_STRING: 'mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:${MONGO_PORT}/'
      MONGO_DB_NAME: 'PersistenceDB'
      MONGO_COLLECTION_NAME: 'LoginCollection'
      AUTH_SERVER_URL: 'cpbackend:${BACKEND_PORT}'
    depends_on:
      - kafka
      - mongo
      - cpbackend
    networks:
      - cp
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:${KAFKA_LISTENER_PORT}'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:${KAFKA_LISTENER_PORT},CONTROLLER://kafka:29093'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
    networks:
      - cp
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "${KAFKA_UI_PORT}:${KAFKA_UI_PORT}"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:${KAFKA_LISTENER_PORT}'
    volumes:
      - ./data/kui:/etc/kafkaui
    depends_on:
      - kafka
    networks:
      - cp
  mongo:
    image: mongo:latest
    container_name: mongo
    hostname: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ./data/mongo/data:/data/db
    networks:
      - cp
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "${MONGO_EXPRESS_PORT}:${MONGO_EXPRESS_PORT}"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:${MONGO_PORT}/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
    networks:
      - cp
networks:
  cp:
    driver: bridge
    name: cp
